/// Returns the spacing value for a given variant.
///
/// @param {String} $space - how much space do you need.
/// @return {Number} The spacing for the variant in px.

@function ds-space($space: base) {
  $fetched-value: map-get($ds-spacing-data, $space);

  @if type-of($fetched-value) == number {
    @return $fetched-value;
  } @else {
    @error 'Spacing variant `#{$space}` not found. Available variants: #{available-names($ds-spacing-data)}';
  }
}


/// Returns the widths of the specified column.
/// @param {String} $name - The column name.
/// @return {Number} The width for the column.

// @function ds-layout-width($name, $value: base) {
//   $fetched-value: map-get(map-get($ds-layout-width-data, $name), $value);

//   @if type-of($fetched-value) != null {
//     @return $fetched-value;
//   } @else {
//     @error 'Column `#{$name} - #{$value}` not found. Available columns: #{available-names($ds-layout-width-data)}';
//   }
// }

/// Returns the margin and padding of a container.
/// @param {String} $name - The column name.
/// @return {Number} The width for the column.

// @function ds-container-layout($name, $value: base) {
//   $fetched-value: map-get(map-get($ds-container-layout-data, $name), $value);

//   @if type-of($fetched-value) != null {
//     @return $fetched-value;
//   } @else {
//     @error 'Column `#{$name} - #{$value}` not found. Available columns: #{available-names($ds-container-layout-data)}';
//   }
// }